

--CREATE A FUNCTION THAT WILL RETURN EMPLOYEE OBJECT
CREATE OR REPLACE FUNCTION GET_EMPLOYEE_BY_ID(P_EMPLOYEE_ID NUMBER)
RETURN EMPLOYEES%ROWTYPE
AS
V_EMPLOYEE EMPLOYEES%ROWTYPE;
BEGIN
	SELECT * INTO V_EMPLOYEE 
	FROM HR.EMPLOYEES WHERE EMPLOYEE_ID=P_EMPLOYEE_ID;
  
  RETURN V_EMPLOYEE;
END;

/

DECLARE 
V_EMLOYEES EMPLOYEES%ROWTYPE;
P_EMPLOYEE_ID NUMBER :=100;
BEGIN
	V_EMLOYEES   := GET_EMPLOYEE_BY_ID(P_EMPLOYEE_ID);
	DBMS_OUTPUT.PUT_LINE(V_EMLOYEES.LAST_NAME);
END;

/

HANDLING ERROR/EXCEPTON IN FUNCTION
----------------------------------------------
CREATE OR REPLACE FUNCTION GET_EMPLOYEE_BY_ID(
    P_EMPLOYEE_ID NUMBER)
  RETURN EMPLOYEES%ROWTYPE
AS
  V_EMPLOYEE EMPLOYEES%ROWTYPE;
BEGIN
  SELECT * INTO V_EMPLOYEE FROM HR.EMPLOYEES WHERE EMPLOYEE_ID=P_EMPLOYEE_ID;
  RETURN V_EMPLOYEE;
EXCEPTION
WHEN no_data_found THEN
  DBMS_OUTPUT.PUT_LINE('NO DATA FOUND FOR EMPLOYEE ID: '||P_EMPLOYEE_ID);
  DBMS_OUTPUT.PUT_LINE('EXCEPTION IS : '||sqlerrm); 
  RETURN NULL;
WHEN others THEN
  DBMS_OUTPUT.PUT_LINE('Something Unexpected Happened');
  RETURN NULL;  
END;
/
DECLARE
  V_EMLOYEES EMPLOYEES%ROWTYPE;
  P_EMPLOYEE_ID NUMBER :=10;
BEGIN
  V_EMLOYEES := GET_EMPLOYEE_BY_ID(P_EMPLOYEE_ID);
  DBMS_OUTPUT.PUT_LINE(V_EMLOYEES.LAST_NAME);
END;
/


--checking functions
/
select *From user_objects
where object_type = 'FUNCTION' and OBJECT_NAME=UPPER('EMP_GET_AVERAGE_SALARY');
/



