 
What is table functions?
--------------------------
	Table functions returns a table of varray or nested tables.
	Regular functions returns after completing the whole data.
	Pipelined functions return each row one by one.

Which one to choose?
-------------------
	If you have small amount of data, you can choose regular function.
	If you have large amount of data, the table function is the right choise.
	
	
TABLE FUNCTION :
------------------
--LET'S CREATE A OBJECT TYPE...
CREATE OR REPLACE type T_EMPLOYEES
AS
  OBJECT
  (
    EMPLOYEE_ID NUMBER,
    LAST_NAME   VARCHAR2(200),
    EMAIL       VARCHAR2(50),
    SALARY      NUMBER );
/ 
--NOW WE WILL CREATE TABLE TYPE
CREATE OR REPLACE TYPE TAB_EMPLOYEES AS TABLE OF T_EMPLOYEES;
    
  /
  --NOW WE WILL CREATE A FUNCTION
CREATE OR REPLACE FUNCTION TAB_FUN_GET_EMPLOYEES(
  P_DEPARTMENT_ID NUMBER)
RETURN TAB_EMPLOYEES
is
  V_EMPLOYEES TAB_EMPLOYEES := TAB_EMPLOYEES();
  CURSOR CUR_EMPLOYEES
  IS
    SELECT * FROM EMPLOYEES WHERE DEPARTMENT_ID = P_DEPARTMENT_ID;
  V_INIT NUMBER :=1;
BEGIN
  FOR ITEM IN CUR_EMPLOYEES
  LOOP
    V_EMPLOYEES.EXTEND;
    V_EMPLOYEES(V_INIT) := T_EMPLOYEES( ITEM.EMPLOYEE_ID, ITEM.LAST_NAME, ITEM.EMAIL, ITEM.SALARY );
    V_INIT              :=V_INIT+1;
  END LOOP;
  RETURN V_EMPLOYEES;
EXCEPTION
WHEN others THEN
  DBMS_OUTPUT.PUT_LINE('Something went Wrong while fetching employee data.');
  RETURN NULL;
END;
/

--NOW WE'LL CALL THE ABOVE TABULAR FUNCTION. LET'S SEE WHAT HAPPEN..
SELECT * FROM TABLE(TAB_FUN_GET_EMPLOYEES(50))
ORDER BY 1 ASC;
/

PIPELINED FUNCTION :
--------------------
--LET'S CREATE A OBJECT TYPE...
CREATE OR REPLACE type T_EMPLOYEES
AS
  OBJECT
  (
    EMPLOYEE_ID NUMBER,
    LAST_NAME   VARCHAR2(200),
    EMAIL       VARCHAR2(50),
    SALARY      NUMBER );
/ 
--NOW WE WILL CREATE TABLE TYPE
CREATE OR REPLACE TYPE TAB_EMPLOYEES AS TABLE OF T_EMPLOYEES;
    
  /
  --NOW WE WILL CREATE A FUNCTION
CREATE OR REPLACE FUNCTION PIPELINED_FUN_GET_EMPLOYEES(
  P_DEPARTMENT_ID NUMBER)
RETURN TAB_EMPLOYEES PIPELINED
is
  --V_EMPLOYEES TAB_EMPLOYEES := TAB_EMPLOYEES();
  CURSOR CUR_EMPLOYEES
  IS
    SELECT * FROM EMPLOYEES WHERE DEPARTMENT_ID = P_DEPARTMENT_ID;
  --V_INIT NUMBER :=1;
BEGIN
  FOR ITEM IN CUR_EMPLOYEES
  LOOP
    --V_EMPLOYEES.EXTEND;
    PIPE ROW (T_EMPLOYEES( ITEM.EMPLOYEE_ID, ITEM.LAST_NAME, ITEM.EMAIL, ITEM.SALARY ));
    --V_INIT              :=V_INIT+1;
  END LOOP;
  --RETURN V_EMPLOYEES;
  RETURN;
EXCEPTION
WHEN others THEN
  DBMS_OUTPUT.PUT_LINE('Something went Wrong while fetching employee data.');
  RETURN;
END;
/

--NOW WE'LL CALL THE ABOVE TABULAR FUNCTION. LET'S SEE WHAT HAPPEN..
SELECT * FROM TABLE(PIPELINED_FUN_GET_EMPLOYEES(50))
ORDER BY 1 ASC;
/












 
 